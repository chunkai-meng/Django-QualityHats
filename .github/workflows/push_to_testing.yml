name: Test and Deploy

on:
  push:
    branches: [ env/**, ck/**, as/**, yz/** ]

env:
  NODE_VERSION: '16.x'
  PYTHON_VERSION: '3.10'

jobs:
  Test:
    name: Setup and Test
    runs-on: ubuntu-latest
    environment:
      name: Development

    strategy:
      max-parallel: 4
      matrix:
        python-version: [ '3.10' ]
        
    outputs:
      image_name: ${{ steps.output_step.outputs.IMAGE_NAME }}
      url: https://${{ steps.output_step.outputs.IMAGE_NAME }}.prowood.network/

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/shared-steps/install-apt-dependencies
        with:
          node_version: ${{ env.NODE_VERSION }}
          python_version: ${{ env.PYTHON_VERSION }}
      - id: output_step
        run: |
          echo "IMAGE_NAME=$GITHUB_REF_NAME"| sed 's/env\//erp-/g' >> $GITHUB_OUTPUT
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Tests
        run: |
          echo "------------------- run test ---------------- $IMAGE_NAME"
          
  Deploy_to_Demo:
    if: github.event.ref == 'refs/heads/env/demo'
    needs: Test
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: ${{needs.Test.outputs.url}}
    steps:
      - name: Deploy
        run: |
          echo ${{needs.Test.outputs.image_name}} ${{needs.Test.outputs.url}}
          echo I am deploying! 
        
  Deploy_to_Prod:
    if: github.ref == 'refs/heads/env/prod'
    needs: [Test]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{needs.Test.outputs.url}}
    steps:
      - id: extract_branch_name
        shell: bash
        run: echo "${{needs.Test.outputs.image_name}}"
      - name: Deploy  ${{ env.URL }}
        run: |
          echo I am deploying! ${{needs.Test.outputs.image_name}}
        
  Deploy_to_testing:
    name: Deploy to ${{needs.Test.outputs.image_name}}
    if: contains(github.ref, 'test')
    needs: [Test]
    runs-on: ubuntu-latest
    environment:
      name: Testing
      url: ${{needs.Test.outputs.url}}
    steps:
      - name: Deploy
        run: echo I am deploying! ${{needs.Test.outputs.url}}

